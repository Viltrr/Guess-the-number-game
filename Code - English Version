import random
import os

# Global variables
current_level = 0
save_file = "save.txt"

# Save system
def save_progress(level):
    """Saves the player's progress to a file."""
    with open(save_file, "w") as file:
        file.write(str(level))

def load_progress():
    """Loads the player's progress from a file."""
    if os.path.exists(save_file):
        with open(save_file, "r") as file:
            try:
                return int(file.read())
            except ValueError:
                return 0
    return 0

def clear_screen():
    """Clears the terminal screen."""
    os.system("cls" if os.name == "nt" else "clear")

def ask_next_level():
    """Asks the player if they want to proceed to the next level."""
    while True:
        response = input("Do you want to proceed to the next level? (yes/no): ").strip().lower()
        if response in ["yes", "y"]:
            return True
        elif response in ["no", "n"]:
            print("Thanks for playing!")
            exit()
        else:
            print("Please enter 'yes' or 'no'.")

def play_level(level, max_number, attempts=None):
    """Core logic for playing any level."""
    clear_screen()
    print(f"---------- Level {level} ----------")
    if attempts:
        print(f"Note: You have {attempts} attempts.")
    else:
        print("Note: You have unlimited attempts.")
    print(f"Guess the mystery number between 1 and {max_number}!")

    random_number = random.randint(1, max_number)
    attempt_count = 0

    while attempts is None or attempt_count < attempts:
        try:
            player_guess = int(input(f"Enter your guess (Attempt {attempt_count + 1}): "))
            attempt_count += 1

            if player_guess > random_number:
                print("The mystery number is smaller.")
            elif player_guess < random_number:
                print("The mystery number is bigger.")
            else:
                print("Congratulations, you guessed the number!")
                return True
        except ValueError:
            print("Please enter a valid number.")
    
    print("You used all your attempts. Game over!")
    return False

def handle_level(level, max_number, attempts=None):
    """Handles progression for a level."""
    global current_level
    if play_level(level, max_number, attempts):
        current_level += 1
        save_progress(current_level)
        if ask_next_level():
            choose_level()
        else:
            print("Thanks for playing!")
            exit()
    else:
        exit()

def choose_level():
    """Redirects the player to the correct level."""
    levels = [
        {"level": 1, "max_number": 1000, "attempts": None},
        {"level": 2, "max_number": 2000, "attempts": None},
        {"level": 3, "max_number": 3000, "attempts": 10},
        {"level": 4, "max_number": 4000, "attempts": 8},
        {"level": 5, "max_number": 5000, "attempts": 6},
    ]

    if current_level < len(levels):
        level_config = levels[current_level]
        handle_level(level_config["level"], level_config["max_number"], level_config["attempts"])
    else:
        print("Congratulations, you've completed all levels!")
        exit()

def main_menu():
    """Displays the main menu."""
    global current_level
    current_level = load_progress()

    while True:
        clear_screen()
        print("Welcome to the Mystery Number Game!")
        print("-----------------------------------")
        print("1. Start a new game")
        print(f"2. Continue from Level {current_level + 1}" if current_level > 0 else "2. Continue (no progress saved)")
        print("3. Exit")
        choice = input("Choose an option (1/2/3): ").strip()

        if choice == "1":
            current_level = 0
            save_progress(current_level)
            choose_level()
        elif choice == "2" and current_level > 0:
            choose_level()
        elif choice == "3":
            print("Goodbye!")
            exit()
        else:
            print("Invalid choice. Please try again.")

# GAME START -------------------------------------------------------------------

if __name__ == "__main__":
    main_menu()